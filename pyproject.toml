[project]
name = "planetae-orm"
version = "0.1.0"
description = "An ORM meaning to integrate seamlessly in the most direct way, asynchronous database calls for different databases with the same commands"
readme = "README.md"
license = { file = "LICENSE" }
authors = [
    { name = "Edmilson Monteiro Rodrigues Neto", email = "edmilson.rodriguesn38@gmail.com" }
]
requires-python = ">=3.13"
dependencies = [
    "aiomysql>=0.2.0",
    "aioodbc>=0.5.0",
    "aiosqlite>=0.20.0",
    "asyncpg>=0.30.0",
    "motor>=3.6.0",
]

[dependency-groups]
dev = [
    "mypy>=1.13.0",
    "planetae-orm",
    "ruff>=0.8.2",
]
tests = [
    "pytest-asyncio>=0.24.0",
    "pytest>=8.3.2",
    "pytest-cov>=5.0.0",
]
docs = [
    "autodoc>=0.5.0",
    "sphinx>=8.1.3",
]

[project.scripts]
lint = "tools.lint:lint_and_format"
test = "tools.test:test"
docs = "tools.docs:build"

[tool.uv.workspace]
members = ["."]

[tool.uv.sources]
planetae-orm = { workspace = true }


[tool.pytest.ini_options]
pythonpath = "."


[tool.ruff]
line-length = 79
target-version = "py313"

[tool.ruff.lint]
select = ["I", "E", "F", "W", "UP", "PL", "PT"]

[tool.ruff.format]
preview = true
quote-style = 'single'
docstring-code-format = true
docstring-code-line-length = 72


[tool.mypy]
python_version="3.13"
disable_error_code = ["misc"]


[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
include = ["src/planetae_orm/**"]

[tool.hatch.build.targets.sdist]
include = ["src/planetae_orm/**"]

[tool.hatch.metadata]
root = "src"
